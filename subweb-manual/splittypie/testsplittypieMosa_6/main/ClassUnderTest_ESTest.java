/*
 * This file was automatically generated by EvoSuite
 * Wed Aug 19 11:54:06 GMT 2020
 */

package main;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import custom_classes.Currencies;
import custom_classes.Dates;
import custom_classes.Id;
import custom_classes.Participants;
import custom_classes.Price;
import custom_classes.Transactions;
import custom_classes.TripNames;
import main.ClassUnderTest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, resetStaticState = true) 
public class ClassUnderTest_ESTest extends ClassUnderTest_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 11 covered goals:
   * Goal 1. main.ClassUnderTest.addNewEventEventDetailsContainerPage(Lcustom_classes/TripNames;)V: Line 244
   * Goal 2. main.ClassUnderTest.cancelConfirmationPage()V: Line 163
   * Goal 3. main.ClassUnderTest.confirmConfirmationPage()V: Line 203
   * Goal 4. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 5. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 6. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 7. main.ClassUnderTest.deleteEventAddEditEventContainerPage()V: Line 523
   * Goal 8. main.ClassUnderTest.editEventEventDetailsContainerPage(Lcustom_classes/TripNames;)V: Line 281
   * Goal 9. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 10. main.ClassUnderTest.goToEventsHomePageContainerPage()V: Line 108
   * Goal 11. main.ClassUnderTest.goToHomePageAddEditEventContainerPage()V: Line 568
   */

  @Test(timeout = 1001000)
  public void test0()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames0 = TripNames.ROME;
      TripNames tripNames1 = TripNames.RESTAURANT;
      Participants participants0 = Participants.JOHN;
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      Currencies currencies0 = Currencies.CHF;
      Participants participants1 = Participants.LUKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants1);
      classUnderTest0.editEventEventDetailsContainerPage(tripNames1);
      classUnderTest0.deleteEventAddEditEventContainerPage();
      classUnderTest0.confirmConfirmationPage();
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames0);
      Participants participants2 = Participants.LUKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants2, participants0);
      classUnderTest0.editEventEventDetailsContainerPage(tripNames1);
      classUnderTest0.deleteEventAddEditEventContainerPage();
      classUnderTest0.cancelConfirmationPage();
      Participants participants3 = Participants.MARK;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants3);
      TripNames tripNames2 = TripNames.ROME;
      classUnderTest0.addNewEventEventDetailsContainerPage(tripNames2);
      classUnderTest0.goToHomePageAddEditEventContainerPage();
      classUnderTest0.goToEventsHomePageContainerPage();
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * Goal 1. main.ClassUnderTest.addNewEventEventDetailsContainerPage(Lcustom_classes/TripNames;)V: Line 244
   * Goal 2. main.ClassUnderTest.addParticipantAddEditEventContainerPage(Lcustom_classes/Participants;)V: Line 450
   * Goal 3. main.ClassUnderTest.cancelAddEditEventContainerPage()V: Line 470
   * Goal 4. main.ClassUnderTest.closeShareEventPage()V: Line 584
   * Goal 5. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 6. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 7. main.ClassUnderTest.editEventEventDetailsContainerPage(Lcustom_classes/TripNames;)V: Line 281
   * Goal 8. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 9. main.ClassUnderTest.shareEventEventDetailsContainerPage()V: Line 385
   */

  @Test(timeout = 1001000)
  public void test1()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames0 = TripNames.ROME;
      TripNames tripNames1 = TripNames.RESTAURANT;
      Participants participants0 = Participants.JOHN;
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      Currencies currencies0 = Currencies.CHF;
      Participants participants1 = Participants.LUKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants1);
      classUnderTest0.editEventEventDetailsContainerPage(tripNames1);
      Participants participants2 = Participants.MIKE;
      classUnderTest0.addParticipantAddEditEventContainerPage(participants2);
      classUnderTest0.addNewEventEventDetailsContainerPage(tripNames1);
      Participants participants3 = Participants.LUKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants3);
      TripNames tripNames2 = TripNames.RESTAURANT;
      classUnderTest0.editEventEventDetailsContainerPage(tripNames2);
      classUnderTest0.cancelAddEditEventContainerPage();
      classUnderTest0.shareEventEventDetailsContainerPage();
      classUnderTest0.closeShareEventPage();
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * Goal 1. main.ClassUnderTest.addQuickAddTransactionPage(Lcustom_classes/Transactions;Lcustom_classes/Price;Lcustom_classes/Dates;)V: Line 610
   * Goal 2. main.ClassUnderTest.addTransactionEventDetailsContainerPage()V: Line 263
   * Goal 3. main.ClassUnderTest.closeQuickAddTransactionPage()V: Line 646
   * Goal 4. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 5. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 6. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   */

  @Test(timeout = 1001000)
  public void test2()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      classUnderTest0.goToAboutHomePageContainerPage();
      Transactions transactions0 = Transactions.TICKETS;
      int int0 = (-570);
      Price price0 = new Price(int0);
      Dates dates0 = Dates.WINTER;
      Participants participants0 = Participants.LUKE;
      TripNames tripNames0 = TripNames.RESTAURANT;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      Currencies currencies0 = Currencies.PLN;
      Participants participants1 = Participants.JOHN;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants0);
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.closeQuickAddTransactionPage();
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.addQuickAddTransactionPage(transactions0, price0, dates0);
  }

  //Test case number: 3
  /*
   * 10 covered goals:
   * Goal 1. main.ClassUnderTest.addNewEventEventDetailsContainerPage(Lcustom_classes/TripNames;)V: Line 244
   * Goal 2. main.ClassUnderTest.addTransactionEventDetailsContainerPage()V: Line 263
   * Goal 3. main.ClassUnderTest.addWithDetailsQuickAddTransactionPage()V: Line 630
   * Goal 4. main.ClassUnderTest.cancelAddEditEventContainerPage()V: Line 474
   * Goal 5. main.ClassUnderTest.cancelAddEditTransactionContainerPage()V: Line 688
   * Goal 6. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 7. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 8. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 9. main.ClassUnderTest.goToFeaturesHomePageContainerPage()V: Line 126
   * Goal 10. main.ClassUnderTest.goToOverviewEventDetailsContainerPage()V: Line 335
   */

  @Test(timeout = 1001000)
  public void test3()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      TripNames tripNames0 = TripNames.ROME;
      Participants participants0 = Participants.MATTEO;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      classUnderTest0.cancelAddEditEventContainerPage();
      classUnderTest0.goToFeaturesHomePageContainerPage();
      classUnderTest0.goToFeaturesHomePageContainerPage();
      TripNames tripNames1 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames1);
      Currencies currencies0 = Currencies.EUR;
      Participants participants1 = Participants.MARCO;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants1);
      classUnderTest0.goToOverviewEventDetailsContainerPage();
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.addWithDetailsQuickAddTransactionPage();
      classUnderTest0.cancelAddEditTransactionContainerPage();
      TripNames tripNames2 = TripNames.ROME;
      classUnderTest0.addNewEventEventDetailsContainerPage(tripNames2);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * Goal 1. main.ClassUnderTest.cancelAddEditEventContainerPage()V: Line 474
   * Goal 2. main.ClassUnderTest.cancelConfirmationPage()V: Line 175
   * Goal 3. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 4. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 5. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 6. main.ClassUnderTest.deleteEventHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 75
   * Goal 7. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 8. main.ClassUnderTest.goToHomeEventDetailsContainerPage()V: Line 321
   */

  @Test(timeout = 1001000)
  public void test4()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      TripNames tripNames0 = TripNames.ROME;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      classUnderTest0.cancelAddEditEventContainerPage();
      TripNames tripNames1 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames1);
      Currencies currencies0 = Currencies.PLN;
      Participants participants0 = Participants.MIKE;
      Participants participants1 = Participants.JOHN;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants1);
      classUnderTest0.goToHomeEventDetailsContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames2 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.deleteEventHomePageContainerPage(tripNames2);
      classUnderTest0.cancelConfirmationPage();
  }

  //Test case number: 5
  /*
   * 10 covered goals:
   * Goal 1. main.ClassUnderTest.cancelAddEditEventContainerPage()V: Line 474
   * Goal 2. main.ClassUnderTest.confirmConfirmationPage()V: Line 215
   * Goal 3. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 4. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 5. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 6. main.ClassUnderTest.deleteEventHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 75
   * Goal 7. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 8. main.ClassUnderTest.goToFeaturesHomePageContainerPage()V: Line 126
   * Goal 9. main.ClassUnderTest.goToHomeEventDetailsContainerPage()V: Line 321
   * Goal 10. main.ClassUnderTest.goToHomePageAddEditEventContainerPage()V: Line 568
   */

  @Test(timeout = 1001000)
  public void test5()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      TripNames tripNames0 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.goToFeaturesHomePageContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames1 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames1);
      classUnderTest0.goToHomePageAddEditEventContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      classUnderTest0.cancelAddEditEventContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames1);
      Currencies currencies0 = Currencies.PLN;
      Participants participants0 = Participants.MARK;
      Participants participants1 = Participants.MARCO;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants0, participants1);
      classUnderTest0.goToHomeEventDetailsContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.deleteEventHomePageContainerPage(tripNames1);
      classUnderTest0.confirmConfirmationPage();
      TripNames tripNames2 = TripNames.BARCELONA;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames2);
      classUnderTest0.goToHomePageAddEditEventContainerPage();
      TripNames tripNames3 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames3);
  }

  //Test case number: 6
  /*
   * 11 covered goals:
   * Goal 1. main.ClassUnderTest.addTransactionEventDetailsContainerPage()V: Line 263
   * Goal 2. main.ClassUnderTest.cancelAddEditEventContainerPage()V: Line 474
   * Goal 3. main.ClassUnderTest.closeQuickAddTransactionPage()V: Line 646
   * Goal 4. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 5. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 6. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 7. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 8. main.ClassUnderTest.goToFeaturesHomePageContainerPage()V: Line 126
   * Goal 9. main.ClassUnderTest.goToHomeEventDetailsContainerPage()V: Line 321
   * Goal 10. main.ClassUnderTest.goToOverviewEventDetailsContainerPage()V: Line 335
   * Goal 11. main.ClassUnderTest.goToTransactionEventDetailsContainerPage()V: Line 349
   */

  @Test(timeout = 1001000)
  public void test6()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      classUnderTest0.goToAboutHomePageContainerPage();
      classUnderTest0.goToFeaturesHomePageContainerPage();
      TripNames tripNames0 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames0);
      Participants participants0 = Participants.JOHN;
      TripNames tripNames1 = TripNames.ROME;
      classUnderTest0.cancelAddEditEventContainerPage();
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      classUnderTest0.cancelAddEditEventContainerPage();
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames1);
      Currencies currencies0 = Currencies.BGN;
      Participants participants1 = Participants.MARCO;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants0);
      classUnderTest0.goToTransactionEventDetailsContainerPage();
      classUnderTest0.goToOverviewEventDetailsContainerPage();
      classUnderTest0.goToOverviewEventDetailsContainerPage();
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.closeQuickAddTransactionPage();
      classUnderTest0.goToHomeEventDetailsContainerPage();
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * Goal 1. main.ClassUnderTest.addTransactionEventDetailsContainerPage()V: Line 263
   * Goal 2. main.ClassUnderTest.addWithDetailsQuickAddTransactionPage()V: Line 630
   * Goal 3. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 4. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 5. main.ClassUnderTest.goToFeaturesHomePageContainerPage()V: Line 126
   * Goal 6. main.ClassUnderTest.goToHomeAddEditTransactionContainerPage()V: Line 722
   * Goal 7. main.ClassUnderTest.goToHomePageAddEditEventContainerPage()V: Line 568
   * Goal 8. main.ClassUnderTest.seeEventDetailsHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 142
   */

  @Test(timeout = 1001000)
  public void test7()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      TripNames tripNames0 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames0);
      Participants participants0 = Participants.MARK;
      // Undeclared exception!
      try { 
        classUnderTest0.deleteParticipantAddEditEventContainerPage(participants0);
      } catch(RuntimeException e) {
         //
         // deleteParticipant: is not edit or participant Mark not present or button disabled
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      TripNames tripNames1 = TripNames.RESTAURANT;
      // Undeclared exception!
      try { 
        classUnderTest0.addNewEventEventDetailsContainerPage(tripNames1);
      } catch(RuntimeException e) {
         //
         // addNewEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.deleteEventAddEditEventContainerPage();
      } catch(RuntimeException e) {
         //
         // deleteEvent: is not edit
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.confirmConfirmationPage();
      } catch(RuntimeException e) {
         //
         // confirmConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      int int0 = 3251;
      Id id0 = new Id(int0);
      // Undeclared exception!
      try { 
        classUnderTest0.viewTransferEventDetailsContainerPage(id0);
      } catch(RuntimeException e) {
         //
         // viewTransferEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelViewTransferContainerPage();
      } catch(RuntimeException e) {
         //
         // cancelViewTransferContainerPage: expected po.event.pages.ViewTransferContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.goToHomeEventDetailsContainerPage();
      } catch(RuntimeException e) {
         //
         // goToHomeEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      TripNames tripNames2 = TripNames.RESTAURANT;
      // Undeclared exception!
      try { 
        classUnderTest0.deleteEventHomePageContainerPage(tripNames2);
      } catch(RuntimeException e) {
         //
         // deleteEventHomePageContainerPage: expected po.home.pages.HomePageContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelAddEditTransactionContainerPage();
      } catch(RuntimeException e) {
         //
         // cancelAddEditTransactionContainerPage: expected po.event.pages.AddEditTransactionContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addNewEventEventDetailsContainerPage(tripNames2);
      } catch(RuntimeException e) {
         //
         // addNewEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Currencies currencies0 = Currencies.USD;
      Participants participants1 = Participants.MARCO;
      Participants participants2 = Participants.MIKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants2);
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.addWithDetailsQuickAddTransactionPage();
      Transactions transactions0 = Transactions.LUNCH;
      Price price0 = new Price(int0);
      Dates dates0 = Dates.FALL;
      // Undeclared exception!
      try { 
        classUnderTest0.shareTransactionAmongAllAddEditTransactionContainerPage(transactions0, participants0, price0, dates0);
      } catch(RuntimeException e) {
         //
         // shareTransactionAmongAll: payer Mark is not present
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addNewEventEventDetailsContainerPage(tripNames0);
      } catch(RuntimeException e) {
         //
         // addNewEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Participants participants3 = Participants.MARCO;
      // Undeclared exception!
      try { 
        classUnderTest0.deleteParticipantAddEditEventContainerPage(participants3);
      } catch(RuntimeException e) {
         //
         // deleteParticipantAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.settleUpEventDetailsContainerPage(id0);
      } catch(RuntimeException e) {
         //
         // settleUpEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      TripNames tripNames3 = TripNames.ROME;
      // Undeclared exception!
      try { 
        classUnderTest0.deleteEventHomePageContainerPage(tripNames3);
      } catch(RuntimeException e) {
         //
         // deleteEventHomePageContainerPage: expected po.home.pages.HomePageContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.deleteTransactionAddEditTransactionContainerPage();
      } catch(RuntimeException e) {
         //
         // deleteTransaction: is not edit
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelAddEditEventContainerPage();
      } catch(RuntimeException e) {
         //
         // cancelAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addNewEventEventDetailsContainerPage(tripNames2);
      } catch(RuntimeException e) {
         //
         // addNewEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.goToHomePageAddEditEventContainerPage();
      } catch(RuntimeException e) {
         //
         // goToHomePageAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      TripNames tripNames4 = TripNames.BARCELONA;
      // Undeclared exception!
      try { 
        classUnderTest0.deleteEventHomePageContainerPage(tripNames4);
      } catch(RuntimeException e) {
         //
         // deleteEventHomePageContainerPage: expected po.home.pages.HomePageContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.confirmConfirmationPage();
      } catch(RuntimeException e) {
         //
         // confirmConfirmationPage: expected po.shared.pages.ConfirmationPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.goToEventsHomePageContainerPage();
      } catch(RuntimeException e) {
         //
         // goToEventsHomePageContainerPage: expected po.home.pages.HomePageContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames1);
      } catch(RuntimeException e) {
         //
         // createNewEventNavbarHomePageContainerPage: expected po.home.pages.HomePageContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelAddEditEventContainerPage();
      } catch(RuntimeException e) {
         //
         // cancelAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Participants participants4 = Participants.LUKE;
      // Undeclared exception!
      try { 
        classUnderTest0.viewDetailsAsEventDetailsContainerPage(participants4);
      } catch(RuntimeException e) {
         //
         // viewDetailsAsEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.editTransactionEventDetailsContainerPage(id0);
      } catch(RuntimeException e) {
         //
         // editTransactionEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditTransactionContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      classUnderTest0.goToHomeAddEditTransactionContainerPage();
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames3);
      // Undeclared exception!
      try { 
        classUnderTest0.deleteParticipantAddEditEventContainerPage(participants2);
      } catch(RuntimeException e) {
         //
         // deleteParticipant: is not edit or participant Mike not present or button disabled
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addTransactionEventDetailsContainerPage();
      } catch(RuntimeException e) {
         //
         // addTransactionEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Transactions transactions1 = Transactions.TICKETS;
      // Undeclared exception!
      try { 
        classUnderTest0.addQuickAddTransactionPage(transactions1, price0, dates0);
      } catch(RuntimeException e) {
         //
         // addQuickAddTransactionPage: expected po.event.pages.modals.QuickAddTransactionPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      TripNames tripNames5 = TripNames.RESTAURANT;
      // Undeclared exception!
      try { 
        classUnderTest0.editEventEventDetailsContainerPage(tripNames5);
      } catch(RuntimeException e) {
         //
         // editEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found AddEditEventContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      classUnderTest0.goToHomePageAddEditEventContainerPage();
      // Undeclared exception!
      try { 
        classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      } catch(RuntimeException e) {
         //
         // createNewEventHome: tripName Mirabilandia already exists
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelAddEditEventContainerPage();
      } catch(RuntimeException e) {
         //
         // cancelAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.deleteEventHomePageContainerPage(tripNames2);
      } catch(RuntimeException e) {
         //
         // deleteEvent: tripName Restaurant does not exist
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addTransactionEventDetailsContainerPage();
      } catch(RuntimeException e) {
         //
         // addTransactionEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.addWithDetailsQuickAddTransactionPage();
      } catch(RuntimeException e) {
         //
         // addWithDetailsQuickAddTransactionPage: expected po.event.pages.modals.QuickAddTransactionPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Transactions transactions2 = Transactions.LUNCH;
      Participants participants5 = Participants.MARCO;
      // Undeclared exception!
      try { 
        classUnderTest0.shareTransactionAmongAllAddEditTransactionContainerPage(transactions2, participants5, price0, dates0);
      } catch(RuntimeException e) {
         //
         // shareTransactionAmongAllAddEditTransactionContainerPage: expected po.event.pages.AddEditTransactionContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.editEventEventDetailsContainerPage(tripNames3);
      } catch(RuntimeException e) {
         //
         // editEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      Participants participants6 = Participants.MIKE;
      // Undeclared exception!
      try { 
        classUnderTest0.addParticipantAddEditEventContainerPage(participants6);
      } catch(RuntimeException e) {
         //
         // addParticipantAddEditEventContainerPage: expected po.event.pages.AddEditEventContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.shareEventEventDetailsContainerPage();
      } catch(RuntimeException e) {
         //
         // shareEventEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.closeShareEventPage();
      } catch(RuntimeException e) {
         //
         // closeShareEventPage: expected po.event.pages.modals.ShareEventPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.settleUpEventDetailsContainerPage(id0);
      } catch(RuntimeException e) {
         //
         // settleUpEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.cancelConfirmationPage();
      } catch(RuntimeException e) {
         //
         // cancelConfirmationPage: expected po.shared.pages.ConfirmationPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
      
      classUnderTest0.goToFeaturesHomePageContainerPage();
      TripNames tripNames6 = TripNames.AMUSEMENT_PARK;
      // Undeclared exception!
      try { 
        classUnderTest0.seeEventDetailsHomePageContainerPage(tripNames6);
      } catch(IllegalStateException e) {
         //
         // EventDetailsContainerPage not loaded properly
         //
         //verifyException("po.event.pages.EventDetailsContainerPage", e);
      }
      
      // Undeclared exception!
      try { 
        classUnderTest0.viewTransferEventDetailsContainerPage(id0);
      } catch(RuntimeException e) {
         //
         // viewTransferEventDetailsContainerPage: expected po.event.pages.EventDetailsContainerPage, found HomePageContainerPage
         //
         //verifyException("main.ClassUnderTest", e);
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * Goal 1. main.ClassUnderTest.addTransactionEventDetailsContainerPage()V: Line 263
   * Goal 2. main.ClassUnderTest.addWithDetailsQuickAddTransactionPage()V: Line 630
   * Goal 3. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 4. main.ClassUnderTest.createNewEventNavbarHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 53
   * Goal 5. main.ClassUnderTest.shareTransactionAmongAllAddEditTransactionContainerPage(Lcustom_classes/Transactions;Lcustom_classes/Participants;Lcustom_classes/Price;Lcustom_classes/Dates;)V: Line 747
   */

  @Test(timeout = 1001000)
  public void test8()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      TripNames tripNames0 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventNavbarHomePageContainerPage(tripNames0);
      Participants participants0 = Participants.MIKE;
      int int0 = 3251;
      Currencies currencies0 = Currencies.RUB;
      Participants participants1 = Participants.MARCO;
      Participants participants2 = Participants.MIKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants2);
      classUnderTest0.addTransactionEventDetailsContainerPage();
      classUnderTest0.addWithDetailsQuickAddTransactionPage();
      Transactions transactions0 = Transactions.MUSEUM;
      Price price0 = new Price(int0);
      Dates dates0 = Dates.FALL;
      classUnderTest0.shareTransactionAmongAllAddEditTransactionContainerPage(transactions0, participants0, price0, dates0);
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * Goal 1. main.ClassUnderTest.createEventAddEditEventContainerPage(Lcustom_classes/Currencies;Lcustom_classes/Participants;Lcustom_classes/Participants;)V: Line 502
   * Goal 2. main.ClassUnderTest.createNewEventHomeHomePageContainerPage(Lcustom_classes/TripNames;)V: Line 31
   * Goal 3. main.ClassUnderTest.goToAboutHomePageContainerPage()V: Line 93
   * Goal 4. main.ClassUnderTest.goToHomeEventDetailsContainerPage()V: Line 321
   * Goal 5. main.ClassUnderTest.goToHomePageAddEditEventContainerPage()V: Line 568
   * Goal 6. main.ClassUnderTest.goToOverviewEventDetailsContainerPage()V: Line 335
   * Goal 7. main.ClassUnderTest.goToTransactionEventDetailsContainerPage()V: Line 349
   * Goal 8. main.ClassUnderTest.viewDetailsAsEventDetailsContainerPage(Lcustom_classes/Participants;)V: Line 401
   */

  @Test(timeout = 1001000)
  public void test9()  throws Throwable  {
      ClassUnderTest classUnderTest0 = new ClassUnderTest();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames0 = TripNames.ROME;
      Participants participants0 = Participants.MATTEO;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames0);
      Currencies currencies0 = Currencies.RON;
      Participants participants1 = Participants.MIKE;
      classUnderTest0.createEventAddEditEventContainerPage(currencies0, participants1, participants0);
      classUnderTest0.goToTransactionEventDetailsContainerPage();
      classUnderTest0.goToOverviewEventDetailsContainerPage();
      classUnderTest0.viewDetailsAsEventDetailsContainerPage(participants0);
      classUnderTest0.goToHomeEventDetailsContainerPage();
      classUnderTest0.goToAboutHomePageContainerPage();
      TripNames tripNames1 = TripNames.AMUSEMENT_PARK;
      classUnderTest0.createNewEventHomeHomePageContainerPage(tripNames1);
      classUnderTest0.goToHomePageAddEditEventContainerPage();
  }
}
